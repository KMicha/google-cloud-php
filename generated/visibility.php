<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: google/api/visibility.proto
//   Date: 2016-04-08 00:06:18

namespace google\api {

  class Visibility extends \DrSlump\Protobuf\Message {

    /**  @var \google\api\VisibilityRule[]  */
    public $rules = array();
    
    /**  @var string[]  */
    public $label_combinations = array();
    
    /**  @var \google\protobuf\BoolValue */
    public $enforce_runtime_visibility = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.Visibility');

      // REPEATED MESSAGE rules = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "rules";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\VisibilityRule';
      $descriptor->addField($f);

      // REPEATED STRING label_combinations = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "label_combinations";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE enforce_runtime_visibility = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "enforce_runtime_visibility";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\BoolValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <rules> has a value
     *
     * @return boolean
     */
    public function hasRules(){
      return $this->_has(1);
    }
    
    /**
     * Clear <rules> value
     *
     * @return \google\api\Visibility
     */
    public function clearRules(){
      return $this->_clear(1);
    }
    
    /**
     * Get <rules> value
     *
     * @param int $idx
     * @return \google\api\VisibilityRule
     */
    public function getRules($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <rules> value
     *
     * @param \google\api\VisibilityRule $value
     * @return \google\api\Visibility
     */
    public function setRules(\google\api\VisibilityRule $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <rules>
     *
     * @return \google\api\VisibilityRule[]
     */
    public function getRulesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <rules>
     *
     * @param \google\api\VisibilityRule $value
     * @return \google\api\Visibility
     */
    public function addRules(\google\api\VisibilityRule $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <label_combinations> has a value
     *
     * @return boolean
     */
    public function hasLabelCombinations(){
      return $this->_has(2);
    }
    
    /**
     * Clear <label_combinations> value
     *
     * @return \google\api\Visibility
     */
    public function clearLabelCombinations(){
      return $this->_clear(2);
    }
    
    /**
     * Get <label_combinations> value
     *
     * @param int $idx
     * @return string
     */
    public function getLabelCombinations($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <label_combinations> value
     *
     * @param string $value
     * @return \google\api\Visibility
     */
    public function setLabelCombinations( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <label_combinations>
     *
     * @return string[]
     */
    public function getLabelCombinationsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <label_combinations>
     *
     * @param string $value
     * @return \google\api\Visibility
     */
    public function addLabelCombinations( $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <enforce_runtime_visibility> has a value
     *
     * @return boolean
     */
    public function hasEnforceRuntimeVisibility(){
      return $this->_has(3);
    }
    
    /**
     * Clear <enforce_runtime_visibility> value
     *
     * @return \google\api\Visibility
     */
    public function clearEnforceRuntimeVisibility(){
      return $this->_clear(3);
    }
    
    /**
     * Get <enforce_runtime_visibility> value
     *
     * @return \google\protobuf\BoolValue
     */
    public function getEnforceRuntimeVisibility(){
      return $this->_get(3);
    }
    
    /**
     * Set <enforce_runtime_visibility> value
     *
     * @param \google\protobuf\BoolValue $value
     * @return \google\api\Visibility
     */
    public function setEnforceRuntimeVisibility(\google\protobuf\BoolValue $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\api {

  class VisibilityRule extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $selector = null;
    
    /**  @var string */
    public $restriction = null;
    
    /**  @var \google\protobuf\BoolValue */
    public $enforce_runtime_visibility = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.VisibilityRule');

      // OPTIONAL STRING selector = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "selector";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING restriction = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "restriction";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE enforce_runtime_visibility = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "enforce_runtime_visibility";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\BoolValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <selector> has a value
     *
     * @return boolean
     */
    public function hasSelector(){
      return $this->_has(1);
    }
    
    /**
     * Clear <selector> value
     *
     * @return \google\api\VisibilityRule
     */
    public function clearSelector(){
      return $this->_clear(1);
    }
    
    /**
     * Get <selector> value
     *
     * @return string
     */
    public function getSelector(){
      return $this->_get(1);
    }
    
    /**
     * Set <selector> value
     *
     * @param string $value
     * @return \google\api\VisibilityRule
     */
    public function setSelector( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <restriction> has a value
     *
     * @return boolean
     */
    public function hasRestriction(){
      return $this->_has(2);
    }
    
    /**
     * Clear <restriction> value
     *
     * @return \google\api\VisibilityRule
     */
    public function clearRestriction(){
      return $this->_clear(2);
    }
    
    /**
     * Get <restriction> value
     *
     * @return string
     */
    public function getRestriction(){
      return $this->_get(2);
    }
    
    /**
     * Set <restriction> value
     *
     * @param string $value
     * @return \google\api\VisibilityRule
     */
    public function setRestriction( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <enforce_runtime_visibility> has a value
     *
     * @return boolean
     */
    public function hasEnforceRuntimeVisibility(){
      return $this->_has(3);
    }
    
    /**
     * Clear <enforce_runtime_visibility> value
     *
     * @return \google\api\VisibilityRule
     */
    public function clearEnforceRuntimeVisibility(){
      return $this->_clear(3);
    }
    
    /**
     * Get <enforce_runtime_visibility> value
     *
     * @return \google\protobuf\BoolValue
     */
    public function getEnforceRuntimeVisibility(){
      return $this->_get(3);
    }
    
    /**
     * Set <enforce_runtime_visibility> value
     *
     * @param \google\protobuf\BoolValue $value
     * @return \google\api\VisibilityRule
     */
    public function setEnforceRuntimeVisibility(\google\protobuf\BoolValue $value){
      return $this->_set(3, $value);
    }
  }
}

